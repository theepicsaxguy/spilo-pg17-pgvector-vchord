# .github/workflows/build.yml
name: Build Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # Define a consistent cache key/tag for the intermediate Spilo base image
  SPILO_BASE_CACHE_KEY: spilo-base-cache-${{ github.sha }} # Unique per commit for base
  FINAL_IMAGE_CACHE_KEY: final-image-cache-${{ github.sha }} # Unique per commit for final

permissions:
  contents: read # Needed for checkout
  packages: write # Needed to push Docker images
  security-events: write # For any potential security scanning

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true # IMPORTANT: This fetches the spilo-upstream submodule content
          fetch-depth: 0   # Essential for reliable submodule fetching

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx # Give an id to refer to the builder instance

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 1: Build Spilo Base Image and export it to GHA cache
      # This image itself is not pushed to a registry.
      - name: Build and Cache Spilo Base Image (Intermediate)
        uses: docker/build-push-action@v6
        with:
          context: ./spilo-upstream/postgres-appliance # Path to Zalando's build context
          file: ./spilo-upstream/postgres-appliance/Dockerfile # Explicit path to their Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false # Do NOT push this intermediate image to a registry
          # We tag it here mainly for local buildx context if needed, but the cache export is key
          tags: spilo-base-temp:latest # Temporary local tag for buildx internal use
          # Export to GitHub Actions cache directly
          outputs: type=cacheonly,dest=${{ env.SPILO_BASE_CACHE_KEY }}
          # Attempt to load from cache first
          cache-from: type=cacheonly,src=${{ env.SPILO_BASE_CACHE_KEY }}

      - name: Extract metadata for Final Image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=sha,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      # Step 2: Build and Push Final Docker Image
      - name: Build and Push Final Docker Image (with vchord)
        uses: docker/build-push-action@v6
        with:
          context: . # Your project's root as build context
          file: ./Dockerfile # Your project's Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Load the intermediate Spilo base image from the GHA cache
          # Also use general GHA cache for other layers of the final image.
          cache-from: |
            type=cacheonly,src=${{ env.SPILO_BASE_CACHE_KEY }}
            type=gha
          # Cache the final image build layers
          cache-to: type=gha,mode=max